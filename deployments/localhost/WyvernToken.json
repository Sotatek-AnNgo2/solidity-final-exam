{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINT_AMOUNT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "releaseTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SATS_TO_TOKENS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "totalUtxoAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "TokensReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "transactionHash": "0x9e50f001f0580de4430a0f92cb7f3e945d064a8e9f1e60c4cad85473c981b6f9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "707419",
    "logsBloom": "0x
    "blockHash": "0xabf9be2eaff127bddba0ae637e6fa93f617f089c39b1e120af606d5847f58d75",
    "transactionHash": "0x9e50f001f0580de4430a0f92cb7f3e945d064a8e9f1e60c4cad85473c981b6f9",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "707419",
    "status": 1,
    "byzantium": true
  },
  "args": [
    185976814178002
  ],
  "numDeployments": 1,
  "solcInputHash": "81c416fcc09f009c489a7d6d5627b21d",
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"MULTIPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINT_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"releaseTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SATS_TO_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"totalUtxoAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\\r\",\"params\":{\"_owner\":\"address The address which owns the funds.\\r\",\"_spender\":\"address The address which will spend the funds.\\r\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\\r\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r    * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\",\"params\":{\"_spender\":\"The address which will spend the funds.\\r\",\"_value\":\"The amount of tokens to be spent.\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"_owner\":\"The address to query the the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\\r\",\"params\":{\"_value\":\"The amount of token to be burned.\\r\"}},\"releaseTokens(address)\":{\"details\":\"Release the previously specified amount of tokens to the provided address\\r\",\"params\":{\"destination\":\"Address for which tokens will be released (minted) \\r\"}},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\\r\",\"params\":{\"_to\":\"The address to transfer to.\\r\",\"_value\":\"The amount to be transferred.\\r\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\\r\",\"params\":{\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}}}},\"userdoc\":{\"methods\":{\"increaseApproval(address,uint256)\":{\"notice\":\"approve should be called when allowed[_spender] == 0. To increment\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/WyvernToken.sol\":\"WyvernToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WyvernToken.sol\":{\"content\":\"pragma solidity 0.4.26;\\r\\n\\r\\nimport { DelayedReleaseToken } from \\\"./token/DelayedReleaseToken.sol\\\";\\r\\nimport { BurnableToken } from \\\"./token/BurnableToken.sol\\\";\\r\\n\\r\\n// thi\\u1ebfu contract UTXORedeemableToken? kh\\u00f4ng, compile b\\u1ecb l\\u1ed7i n\\u00ean bu\\u1ed9c ph\\u1ea3i b\\u1ecf\\r\\ncontract WyvernToken is DelayedReleaseToken, BurnableToken {\\r\\n\\r\\n    uint constant public decimals     = 18;\\r\\n    string constant public name       = \\\"Project Wyvern Token\\\";\\r\\n    string constant public symbol     = \\\"WYV\\\";\\r\\n\\r\\n    /* Amount of tokens per Wyvern. */\\r\\n    uint constant public MULTIPLIER       = 1;\\r\\n\\r\\n    /* Constant for conversion from satoshis to tokens. */\\r\\n    uint constant public SATS_TO_TOKENS   = MULTIPLIER * (10 ** decimals) / (10 ** 8);\\r\\n\\r\\n    /* Total mint amount, in tokens (will be reached when all UTXOs are redeemed). */\\r\\n    uint constant public MINT_AMOUNT      = 2000000 * MULTIPLIER * (10 ** decimals);\\r\\n\\r\\n    /**\\r\\n      * @dev Initialize the Wyvern token\\r\\n      * @param totalUtxoAmount Total satoshis of the UTXO set\\r\\n      */\\r\\n    constructor(uint totalUtxoAmount) public {\\r\\n        /* Total number of tokens that can be redeemed from UTXOs. */\\r\\n        uint utxoTokens = SATS_TO_TOKENS * totalUtxoAmount;\\r\\n\\r\\n        /* Configure DelayedReleaseToken. */\\r\\n        temporaryAdmin = msg.sender;\\r\\n        numberOfDelayedTokens = MINT_AMOUNT - utxoTokens;\\r\\n\\r\\n        /* Configure UTXORedeemableToken. */\\r\\n        totalSupply = MINT_AMOUNT;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x452ea193d14f6a91465176797010d60e6c7ba0d59ba9d1d223944b568f839bd1\"},\"contracts/libraries/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.13;\\r\\n\\r\\nimport { SafeMath } from \\\"../libraries/SafeMath.sol\\\";\\r\\n\\r\\ncontract ERC20Basic {\\r\\n  uint256 public totalSupply;\\r\\n  function balanceOf(address who) public view returns (uint256);\\r\\n  function transfer(address to, uint256 value) public returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\\r\\ncontract BasicToken is ERC20Basic {\\r\\n  using SafeMath for uint256;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n\\r\\n  /**\\r\\n  * @dev transfer token for a specified address\\r\\n  * @param _to The address to transfer to.\\r\\n  * @param _value The amount to be transferred.\\r\\n  */\\r\\n  function transfer(address _to, uint256 _value) public returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value <= balances[msg.sender]);\\r\\n\\r\\n    // SafeMath.sub will throw if there is not enough balance.\\r\\n    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    emit Transfer(msg.sender, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Gets the balance of the specified address.\\r\\n  * @param _owner The address to query the the balance of.\\r\\n  * @return An uint256 representing the amount owned by the passed address.\\r\\n  */\\r\\n  function balanceOf(address _owner) public view returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\ncontract ERC20 is ERC20Basic {\\r\\n  function allowance(address owner, address spender) public view returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\\r\\n  function approve(address spender, uint256 value) public returns (bool);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n\\r\\n  mapping (address => mapping (address => uint256)) internal allowed;\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Transfer tokens from one address to another\\r\\n   * @param _from address The address which you want to send tokens from\\r\\n   * @param _to address The address which you want to transfer to\\r\\n   * @param _value uint256 the amount of tokens to be transferred\\r\\n   */\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\r\\n    require(_to != address(0));\\r\\n    require(_value <= balances[_from]);\\r\\n    require(_value <= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = balances[_from].sub(_value);\\r\\n    balances[_to] = balances[_to].add(_value);\\r\\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n    emit Transfer(_from, _to, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n   *\\r\\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n   * @param _spender The address which will spend the funds.\\r\\n   * @param _value The amount of tokens to be spent.\\r\\n   */\\r\\n  function approve(address _spender, uint256 _value) public returns (bool) {\\r\\n    allowed[msg.sender][_spender] = _value;\\r\\n    emit Approval(msg.sender, _spender, _value);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n   * @param _owner address The address which owns the funds.\\r\\n   * @param _spender address The address which will spend the funds.\\r\\n   * @return A uint256 specifying the amount of tokens still available for the spender.\\r\\n   */\\r\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\r\\n    return allowed[_owner][_spender];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * approve should be called when allowed[_spender] == 0. To increment\\r\\n   * allowed value is better to use this function to avoid 2 calls (and wait until\\r\\n   * the first transaction is mined)\\r\\n   * From MonolithDAO Token.sol\\r\\n   */\\r\\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\\r\\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\\r\\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\\r\\n    uint oldValue = allowed[msg.sender][_spender];\\r\\n    if (_subtractedValue > oldValue) {\\r\\n      allowed[msg.sender][_spender] = 0;\\r\\n    } else {\\r\\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\\r\\n    }\\r\\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0xf741640379eccbda58f19ddb57a2bb26719faff6734de5543f7585382dd63ba5\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"pragma solidity 0.4.26;\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n  /**\\r\\n  * @dev Multiplies two numbers, throws on overflow.\\r\\n  */\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n    if (a == 0) {\\r\\n      return 0;\\r\\n    }\\r\\n    c = a * b;\\r\\n    assert(c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Integer division of two numbers, truncating the quotient.\\r\\n  */\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\\r\\n    // uint256 c = a / b;\\r\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n    return a / b;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\r\\n  */\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    assert(b <= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Adds two numbers, throws on overflow.\\r\\n  */\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n    c = a + b;\\r\\n    assert(c >= a);\\r\\n    return c;\\r\\n  }\\r\\n}\",\"keccak256\":\"0xedb0e1081827d01b6928b4685641e765662e24960b4c8999de7fad7668ba3a82\"},\"contracts/token/BurnableToken.sol\":{\"content\":\"pragma solidity ^0.4.13;\\r\\n\\r\\nimport { StandardToken } from \\\"../libraries/ERC20.sol\\\";\\r\\n\\r\\ncontract BurnableToken is StandardToken {\\r\\n\\r\\n    event Burn(address indexed burner, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Burns a specific amount of tokens.\\r\\n     * @param _value The amount of token to be burned.\\r\\n     */\\r\\n    function burn(uint256 _value) public {\\r\\n        require(_value > 0);\\r\\n        require(_value <= balances[msg.sender]);\\r\\n        // no need to require value <= totalSupply, since that would imply the\\r\\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\\r\\n\\r\\n        address burner = msg.sender;\\r\\n        balances[burner] = balances[burner].sub(_value);\\r\\n        totalSupply = totalSupply.sub(_value);\\r\\n        emit Burn(burner, _value);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x84daef450ac5cf68b17b600be465a0e5206d51ea0a3395e009b91d3a05999e45\"},\"contracts/token/DelayedReleaseToken.sol\":{\"content\":\"pragma solidity ^0.4.13;\\r\\n\\r\\nimport { StandardToken } from \\\"../libraries/ERC20.sol\\\";\\r\\n\\r\\ncontract DelayedReleaseToken is StandardToken {\\r\\n\\r\\n    /* Temporary administrator address, only used for the initial token release, must be initialized by token constructor. */\\r\\n    address temporaryAdmin;\\r\\n\\r\\n    /* Whether or not the delayed token release has occurred. */\\r\\n    bool hasBeenReleased = false;\\r\\n\\r\\n    /* Number of tokens to be released, must be initialized by token constructor. */\\r\\n    uint numberOfDelayedTokens;\\r\\n\\r\\n    /* Event for convenience. */\\r\\n    event TokensReleased(address destination, uint numberOfTokens);\\r\\n\\r\\n    /**\\r\\n     * @dev Release the previously specified amount of tokens to the provided address\\r\\n     * @param destination Address for which tokens will be released (minted) \\r\\n     */\\r\\n    function releaseTokens(address destination) public {\\r\\n        require((msg.sender == temporaryAdmin) && (!hasBeenReleased));\\r\\n        hasBeenReleased = true;\\r\\n        balances[destination] = numberOfDelayedTokens;\\r\\n        emit Transfer(address(0), destination, numberOfDelayedTokens); \\r\\n        emit TokensReleased(destination, numberOfDelayedTokens);\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x6f15bf8867776a102c455b07013ec5c5f20771156944eecd8080d5920a080004\"}},\"version\":1}",
  "bytecode": "0x60806040526003805460a060020a60ff021916905534801561002057600080fd5b50604051602080610b1c83398101604052516000816305f5e100670de0b6b3a764000060038054600160a060020a0319163317905504026a01a784379d99db420000009081036004556000555050610a9f8061007d6000396000f3006080604052600436106100e55763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663059f8b1681146100ea57806306fdde0314610111578063095ea7b31461019b57806318160ddd146101d357806323b872dd146101e8578063313ce5671461021257806342966c68146102275780635427789c14610241578063661884631461025657806370a082311461027a57806387b0be481461029b57806395d89b41146102bc578063a9059cbb146102d1578063d73dd623146102f5578063dd62ed3e14610319578063fa2dedec14610340575b600080fd5b3480156100f657600080fd5b506100ff610355565b60408051918252519081900360200190f35b34801561011d57600080fd5b5061012661035a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a757600080fd5b506101bf600160a060020a0360043516602435610391565b604080519115158252519081900360200190f35b3480156101df57600080fd5b506100ff6103f7565b3480156101f457600080fd5b506101bf600160a060020a03600435811690602435166044356103fd565b34801561021e57600080fd5b506100ff610576565b34801561023357600080fd5b5061023f60043561057b565b005b34801561024d57600080fd5b506100ff610639565b34801561026257600080fd5b506101bf600160a060020a0360043516602435610648565b34801561028657600080fd5b506100ff600160a060020a0360043516610738565b3480156102a757600080fd5b5061023f600160a060020a0360043516610753565b3480156102c857600080fd5b50610126610867565b3480156102dd57600080fd5b506101bf600160a060020a036004351660243561089e565b34801561030157600080fd5b506101bf600160a060020a0360043516602435610981565b34801561032557600080fd5b506100ff600160a060020a0360043581169060243516610a1a565b34801561034c57600080fd5b506100ff610a45565b600181565b60408051808201909152601481527f50726f6a6563742057797665726e20546f6b656e000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b6000600160a060020a038316151561041457600080fd5b600160a060020a03841660009081526001602052604090205482111561043957600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561046957600080fd5b600160a060020a038416600090815260016020526040902054610492908363ffffffff610a4e16565b600160a060020a0380861660009081526001602052604080822093909355908516815220546104c7908363ffffffff610a6016565b600160a060020a03808516600090815260016020908152604080832094909455918716815260028252828120338252909152205461050b908363ffffffff610a4e16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b600080821161058957600080fd5b336000908152600160205260409020548211156105a557600080fd5b50336000818152600160205260409020546105c6908363ffffffff610a4e16565b600160a060020a038216600090815260016020526040812091909155546105f3908363ffffffff610a4e16565b600055604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b6a01a784379d99db4200000081565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561069d57336000908152600260209081526040808320600160a060020a03881684529091528120556106d2565b6106ad818463ffffffff610a4e16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600354600160a060020a031633148015610788575060035474010000000000000000000000000000000000000000900460ff16155b151561079357600080fd5b6003805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055600454600160a060020a0382166000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a360045460408051600160a060020a0384168152602081019290925280517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df931799281900390910190a150565b60408051808201909152600381527f5759560000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156108b557600080fd5b336000908152600160205260409020548211156108d157600080fd5b336000908152600160205260409020546108f1908363ffffffff610a4e16565b3360009081526001602052604080822092909255600160a060020a03851681522054610923908363ffffffff610a6016565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a03861684529091528120546109b5908363ffffffff610a6016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6402540be40081565b600082821115610a5a57fe5b50900390565b81810182811015610a6d57fe5b929150505600a165627a7a723058205b2386f4b45ee7104c7155e081bc732d76ac5b5cf8e6f0cf2a8eb77b42d760900029",
  "deployedBytecode": "0x6080604052600436106100e55763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663059f8b1681146100ea57806306fdde0314610111578063095ea7b31461019b57806318160ddd146101d357806323b872dd146101e8578063313ce5671461021257806342966c68146102275780635427789c14610241578063661884631461025657806370a082311461027a57806387b0be481461029b57806395d89b41146102bc578063a9059cbb146102d1578063d73dd623146102f5578063dd62ed3e14610319578063fa2dedec14610340575b600080fd5b3480156100f657600080fd5b506100ff610355565b60408051918252519081900360200190f35b34801561011d57600080fd5b5061012661035a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610160578181015183820152602001610148565b50505050905090810190601f16801561018d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a757600080fd5b506101bf600160a060020a0360043516602435610391565b604080519115158252519081900360200190f35b3480156101df57600080fd5b506100ff6103f7565b3480156101f457600080fd5b506101bf600160a060020a03600435811690602435166044356103fd565b34801561021e57600080fd5b506100ff610576565b34801561023357600080fd5b5061023f60043561057b565b005b34801561024d57600080fd5b506100ff610639565b34801561026257600080fd5b506101bf600160a060020a0360043516602435610648565b34801561028657600080fd5b506100ff600160a060020a0360043516610738565b3480156102a757600080fd5b5061023f600160a060020a0360043516610753565b3480156102c857600080fd5b50610126610867565b3480156102dd57600080fd5b506101bf600160a060020a036004351660243561089e565b34801561030157600080fd5b506101bf600160a060020a0360043516602435610981565b34801561032557600080fd5b506100ff600160a060020a0360043581169060243516610a1a565b34801561034c57600080fd5b506100ff610a45565b600181565b60408051808201909152601481527f50726f6a6563742057797665726e20546f6b656e000000000000000000000000602082015281565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b6000600160a060020a038316151561041457600080fd5b600160a060020a03841660009081526001602052604090205482111561043957600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561046957600080fd5b600160a060020a038416600090815260016020526040902054610492908363ffffffff610a4e16565b600160a060020a0380861660009081526001602052604080822093909355908516815220546104c7908363ffffffff610a6016565b600160a060020a03808516600090815260016020908152604080832094909455918716815260028252828120338252909152205461050b908363ffffffff610a4e16565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b601281565b600080821161058957600080fd5b336000908152600160205260409020548211156105a557600080fd5b50336000818152600160205260409020546105c6908363ffffffff610a4e16565b600160a060020a038216600090815260016020526040812091909155546105f3908363ffffffff610a4e16565b600055604080518381529051600160a060020a038316917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b6a01a784379d99db4200000081565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561069d57336000908152600260209081526040808320600160a060020a03881684529091528120556106d2565b6106ad818463ffffffff610a4e16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600354600160a060020a031633148015610788575060035474010000000000000000000000000000000000000000900460ff16155b151561079357600080fd5b6003805474ff0000000000000000000000000000000000000000191674010000000000000000000000000000000000000000179055600454600160a060020a0382166000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a360045460408051600160a060020a0384168152602081019290925280517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df931799281900390910190a150565b60408051808201909152600381527f5759560000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156108b557600080fd5b336000908152600160205260409020548211156108d157600080fd5b336000908152600160205260409020546108f1908363ffffffff610a4e16565b3360009081526001602052604080822092909255600160a060020a03851681522054610923908363ffffffff610a6016565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a03861684529091528120546109b5908363ffffffff610a6016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6402540be40081565b600082821115610a5a57fe5b50900390565b81810182811015610a6d57fe5b929150505600a165627a7a723058205b2386f4b45ee7104c7155e081bc732d76ac5b5cf8e6f0cf2a8eb77b42d760900029",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "_owner": "address The address which owns the funds.\r",
          "_spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r    * Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "_spender": "The address which will spend the funds.\r",
          "_value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.\r",
        "params": {
          "_owner": "The address to query the the balance of.\r"
        },
        "return": "An uint256 representing the amount owned by the passed address.\r"
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.\r",
        "params": {
          "_value": "The amount of token to be burned.\r"
        }
      },
      "releaseTokens(address)": {
        "details": "Release the previously specified amount of tokens to the provided address\r",
        "params": {
          "destination": "Address for which tokens will be released (minted) \r"
        }
      },
      "transfer(address,uint256)": {
        "details": "transfer token for a specified address\r",
        "params": {
          "_to": "The address to transfer to.\r",
          "_value": "The amount to be transferred.\r"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another\r",
        "params": {
          "_from": "address The address which you want to send tokens from\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "increaseApproval(address,uint256)": {
        "notice": "approve should be called when allowed[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r"
      }
    }
  }
}