{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialAddressSet",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "endGrantAuthentication",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "revokeAuthentication",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "pending",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "delegateProxyImplementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "proxies",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "startGrantAuthentication",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "registerProxy",
      "outputs": [
        {
          "name": "proxy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DELAY_PERIOD",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "authAddress",
          "type": "address"
        }
      ],
      "name": "grantInitialAuthentication",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "transactionHash": "0x403e735de3e3833398d955d3507b11a6dfdd5b9aa5ba587ec267d27f4652f50a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "1385941",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x58804cdf7e3f2c28d82ef4583d3a5fccf1c76c80f87c44c83e0513480f5747e0",
    "transactionHash": "0x403e735de3e3833398d955d3507b11a6dfdd5b9aa5ba587ec267d27f4652f50a",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "1385941",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "47db7be3ea9592447ffc94cf8c200a83",
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialAddressSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"endGrantAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"revokeAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delegateProxyImplementation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"proxies\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"startGrantAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registerProxy\",\"outputs\":[{\"name\":\"proxy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELAY_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authAddress\",\"type\":\"address\"}],\"name\":\"grantInitialAuthentication\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"endGrantAuthentication(address)\":{\"details\":\"ProxyRegistry owner only\",\"params\":{\"addr\":\"Address to which to grant permissions\"}},\"grantInitialAuthentication(address)\":{\"details\":\"No delay, can only be called once - after that the standard registry process with a delay must be used\",\"params\":{\"authAddress\":\"Address of the contract to grant authentication\"}},\"registerProxy()\":{\"details\":\"Must be called by the user which the proxy is for, creates a new AuthenticatedProxy\",\"return\":\"New AuthenticatedProxy contract\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"revokeAuthentication(address)\":{\"details\":\"ProxyRegistry owner only\",\"params\":{\"addr\":\"Address of which to revoke permissions\"}},\"startGrantAuthentication(address)\":{\"details\":\"ProxyRegistry owner only\",\"params\":{\"addr\":\"Address to which to grant permissions\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"endGrantAuthentication(address)\":{\"notice\":\"End the process to nable access for specified contract after delay period has passed.\"},\"grantInitialAuthentication(address)\":{\"notice\":\"Grant authentication to the initial Exchange protocol contract\"},\"registerProxy()\":{\"notice\":\"Register a proxy contract with this registry\"},\"revokeAuthentication(address)\":{\"notice\":\"Revoke access for specified contract. Can be done instantly.\"},\"startGrantAuthentication(address)\":{\"notice\":\"Start the process to enable access for specified contract. Subject to delay period.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/WyvernProxyRegistry.sol\":\"WyvernProxyRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WyvernProxyRegistry.sol\":{\"content\":\"pragma solidity ^0.4.13;\\n\\ncontract Ownable {\\n  address public owner;\\n\\n\\n  event OwnershipRenounced(address indexed previousOwner);\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n\\n  /**\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n   * account.\\n   */\\n  constructor() public {\\n    owner = msg.sender;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(msg.sender == owner);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n   * @param newOwner The address to transfer ownership to.\\n   */\\n  function transferOwnership(address newOwner) public onlyOwner {\\n    require(newOwner != address(0));\\n    emit OwnershipTransferred(owner, newOwner);\\n    owner = newOwner;\\n  }\\n\\n  /**\\n   * @dev Allows the current owner to relinquish control of the contract.\\n   */\\n  function renounceOwnership() public onlyOwner {\\n    emit OwnershipRenounced(owner);\\n    owner = address(0);\\n  }\\n}\\n\\ncontract ERC20Basic {\\n  function totalSupply() public view returns (uint256);\\n  function balanceOf(address who) public view returns (uint256);\\n  function transfer(address to, uint256 value) public returns (bool);\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\\ncontract ERC20 is ERC20Basic {\\n  function allowance(address owner, address spender)\\n    public view returns (uint256);\\n\\n  function transferFrom(address from, address to, uint256 value)\\n    public returns (bool);\\n\\n  function approve(address spender, uint256 value) public returns (bool);\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint256 value\\n  );\\n}\\n\\ncontract TokenRecipient {\\n    event ReceivedEther(address indexed sender, uint amount);\\n    event ReceivedTokens(address indexed from, uint256 value, address indexed token, bytes extraData);\\n\\n    /**\\n     * @dev Receive tokens and generate a log event\\n     * @param from Address from which to transfer tokens\\n     * @param value Amount of tokens to transfer\\n     * @param token Address of token\\n     * @param extraData Additional data to log\\n     */\\n    function receiveApproval(address from, uint256 value, address token, bytes extraData) public {\\n        ERC20 t = ERC20(token);\\n        require(t.transferFrom(from, this, value));\\n        emit ReceivedTokens(from, value, token, extraData);\\n    }\\n\\n    /**\\n     * @dev Receive Ether and generate a log event\\n     */\\n    function () payable public {\\n        emit ReceivedEther(msg.sender, msg.value);\\n    }\\n}\\n\\ncontract ProxyRegistry is Ownable {\\n\\n    /* DelegateProxy implementation contract. Must be initialized. */\\n    address public delegateProxyImplementation;\\n\\n    /* Authenticated proxies by user. */\\n    mapping(address => OwnableDelegateProxy) public proxies;\\n\\n    /* Contracts pending access. */\\n    mapping(address => uint) public pending;\\n\\n    /* Contracts allowed to call those proxies. */\\n    mapping(address => bool) public contracts;\\n\\n    /* Delay period for adding an authenticated contract.\\n       This mitigates a particular class of potential attack on the Wyvern DAO (which owns this registry) - if at any point the value of assets held by proxy contracts exceeded the value of half the WYV supply (votes in the DAO),\\n       a malicious but rational attacker could buy half the Wyvern and grant themselves access to all the proxy contracts. A delay period renders this attack nonthreatening - given two weeks, if that happened, users would have\\n       plenty of time to notice and transfer their assets.\\n    */\\n    uint public DELAY_PERIOD = 2 weeks;\\n\\n    /**\\n     * Start the process to enable access for specified contract. Subject to delay period.\\n     *\\n     * @dev ProxyRegistry owner only\\n     * @param addr Address to which to grant permissions\\n     */\\n    function startGrantAuthentication (address addr)\\n        public\\n        onlyOwner\\n    {\\n        require(!contracts[addr] && pending[addr] == 0);\\n        pending[addr] = now;\\n    }\\n\\n    /**\\n     * End the process to nable access for specified contract after delay period has passed.\\n     *\\n     * @dev ProxyRegistry owner only\\n     * @param addr Address to which to grant permissions\\n     */\\n    function endGrantAuthentication (address addr)\\n        public\\n        onlyOwner\\n    {\\n        require(!contracts[addr] && pending[addr] != 0 && ((pending[addr] + DELAY_PERIOD) < now));\\n        pending[addr] = 0;\\n        contracts[addr] = true;\\n    }\\n\\n    /**\\n     * Revoke access for specified contract. Can be done instantly.\\n     *\\n     * @dev ProxyRegistry owner only\\n     * @param addr Address of which to revoke permissions\\n     */    \\n    function revokeAuthentication (address addr)\\n        public\\n        onlyOwner\\n    {\\n        contracts[addr] = false;\\n    }\\n\\n    /**\\n     * Register a proxy contract with this registry\\n     *\\n     * @dev Must be called by the user which the proxy is for, creates a new AuthenticatedProxy\\n     * @return New AuthenticatedProxy contract\\n     */\\n    function registerProxy()\\n        public\\n        returns (OwnableDelegateProxy proxy)\\n    {\\n        require(proxies[msg.sender] == address(0));\\n        proxy = new OwnableDelegateProxy(msg.sender, delegateProxyImplementation, abi.encodeWithSignature(\\\"initialize(address,address)\\\", msg.sender, address(this)));\\n        proxies[msg.sender] = proxy;\\n        return proxy;\\n    }\\n\\n}\\n\\ncontract WyvernProxyRegistry is ProxyRegistry {\\n\\n    string public constant name = \\\"Project Wyvern Proxy Registry\\\";\\n\\n    /* Whether the initial auth address has been set. */\\n    bool public initialAddressSet = false;\\n\\n    constructor ()\\n        public\\n    {\\n        delegateProxyImplementation = new AuthenticatedProxy();\\n    }\\n\\n    /** \\n     * Grant authentication to the initial Exchange protocol contract\\n     *\\n     * @dev No delay, can only be called once - after that the standard registry process with a delay must be used\\n     * @param authAddress Address of the contract to grant authentication\\n     */\\n    function grantInitialAuthentication (address authAddress)\\n        onlyOwner\\n        public\\n    {\\n        require(!initialAddressSet);\\n        initialAddressSet = true;\\n        contracts[authAddress] = true;\\n    }\\n\\n}\\n\\ncontract OwnedUpgradeabilityStorage {\\n\\n  // Current implementation\\n  address internal _implementation;\\n\\n  // Owner of the contract\\n  address private _upgradeabilityOwner;\\n\\n  /**\\n   * @dev Tells the address of the owner\\n   * @return the address of the owner\\n   */\\n  function upgradeabilityOwner() public view returns (address) {\\n    return _upgradeabilityOwner;\\n  }\\n\\n  /**\\n   * @dev Sets the address of the owner\\n   */\\n  function setUpgradeabilityOwner(address newUpgradeabilityOwner) internal {\\n    _upgradeabilityOwner = newUpgradeabilityOwner;\\n  }\\n\\n  /**\\n  * @dev Tells the address of the current implementation\\n  * @return address of the current implementation\\n  */\\n  function implementation() public view returns (address) {\\n    return _implementation;\\n  }\\n\\n  /**\\n  * @dev Tells the proxy type (EIP 897)\\n  * @return Proxy type, 2 for forwarding proxy\\n  */\\n  function proxyType() public pure returns (uint256 proxyTypeId) {\\n    return 2;\\n  }\\n}\\n\\ncontract AuthenticatedProxy is TokenRecipient, OwnedUpgradeabilityStorage {\\n\\n    /* Whether initialized. */\\n    bool initialized = false;\\n\\n    /* Address which owns this proxy. */\\n    address public user;\\n\\n    /* Associated registry with contract authentication information. */\\n    ProxyRegistry public registry;\\n\\n    /* Whether access has been revoked. */\\n    bool public revoked;\\n\\n    /* Delegate call could be used to atomically transfer multiple assets owned by the proxy contract with one order. */\\n    enum HowToCall { Call, DelegateCall }\\n\\n    /* Event fired when the proxy access is revoked or unrevoked. */\\n    event Revoked(bool revoked);\\n\\n    /**\\n     * Initialize an AuthenticatedProxy\\n     *\\n     * @param addrUser Address of user on whose behalf this proxy will act\\n     * @param addrRegistry Address of ProxyRegistry contract which will manage this proxy\\n     */\\n    function initialize (address addrUser, ProxyRegistry addrRegistry)\\n        public\\n    {\\n        require(!initialized);\\n        initialized = true;\\n        user = addrUser;\\n        registry = addrRegistry;\\n    }\\n\\n    /**\\n     * Set the revoked flag (allows a user to revoke ProxyRegistry access)\\n     *\\n     * @dev Can be called by the user only\\n     * @param revoke Whether or not to revoke access\\n     */\\n    function setRevoke(bool revoke)\\n        public\\n    {\\n        require(msg.sender == user);\\n        revoked = revoke;\\n        emit Revoked(revoke);\\n    }\\n\\n    /**\\n     * Execute a message call from the proxy contract\\n     *\\n     * @dev Can be called by the user, or by a contract authorized by the registry as long as the user has not revoked access\\n     * @param dest Address to which the call will be sent\\n     * @param howToCall Which kind of call to make\\n     * @param calldata Calldata to send\\n     * @return Result of the call (success or failure)\\n     */\\n    function proxy(address dest, HowToCall howToCall, bytes calldata)\\n        public\\n        returns (bool result)\\n    {\\n        require(msg.sender == user || (!revoked && registry.contracts(msg.sender)));\\n        if (howToCall == HowToCall.Call) {\\n            result = dest.call(calldata);\\n        } else if (howToCall == HowToCall.DelegateCall) {\\n            result = dest.delegatecall(calldata);\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * Execute a message call and assert success\\n     * \\n     * @dev Same functionality as `proxy`, just asserts the return value\\n     * @param dest Address to which the call will be sent\\n     * @param howToCall What kind of call to make\\n     * @param calldata Calldata to send\\n     */\\n    function proxyAssert(address dest, HowToCall howToCall, bytes calldata)\\n        public\\n    {\\n        require(proxy(dest, howToCall, calldata));\\n    }\\n\\n}\\n\\ncontract Proxy {\\n\\n  /**\\n  * @dev Tells the address of the implementation where every call will be delegated.\\n  * @return address of the implementation to which it will be delegated\\n  */\\n  function implementation() public view returns (address);\\n\\n  /**\\n  * @dev Tells the type of proxy (EIP 897)\\n  * @return Type of proxy, 2 for upgradeable proxy\\n  */\\n  function proxyType() public pure returns (uint256 proxyTypeId);\\n\\n  /**\\n  * @dev Fallback function allowing to perform a delegatecall to the given implementation.\\n  * This function will return whatever the implementation call returns\\n  */\\n  function () payable public {\\n    address _impl = implementation();\\n    require(_impl != address(0));\\n\\n    assembly {\\n      let ptr := mload(0x40)\\n      calldatacopy(ptr, 0, calldatasize)\\n      let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\\n      let size := returndatasize\\n      returndatacopy(ptr, 0, size)\\n\\n      switch result\\n      case 0 { revert(ptr, size) }\\n      default { return(ptr, size) }\\n    }\\n  }\\n}\\n\\ncontract OwnedUpgradeabilityProxy is Proxy, OwnedUpgradeabilityStorage {\\n  /**\\n  * @dev Event to show ownership has been transferred\\n  * @param previousOwner representing the address of the previous owner\\n  * @param newOwner representing the address of the new owner\\n  */\\n  event ProxyOwnershipTransferred(address previousOwner, address newOwner);\\n\\n  /**\\n  * @dev This event will be emitted every time the implementation gets upgraded\\n  * @param implementation representing the address of the upgraded implementation\\n  */\\n  event Upgraded(address indexed implementation);\\n\\n  /**\\n  * @dev Upgrades the implementation address\\n  * @param implementation representing the address of the new implementation to be set\\n  */\\n  function _upgradeTo(address implementation) internal {\\n    require(_implementation != implementation);\\n    _implementation = implementation;\\n    emit Upgraded(implementation);\\n  }\\n\\n  /**\\n  * @dev Throws if called by any account other than the owner.\\n  */\\n  modifier onlyProxyOwner() {\\n    require(msg.sender == proxyOwner());\\n    _;\\n  }\\n\\n  /**\\n   * @dev Tells the address of the proxy owner\\n   * @return the address of the proxy owner\\n   */\\n  function proxyOwner() public view returns (address) {\\n    return upgradeabilityOwner();\\n  }\\n\\n  /**\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n   * @param newOwner The address to transfer ownership to.\\n   */\\n  function transferProxyOwnership(address newOwner) public onlyProxyOwner {\\n    require(newOwner != address(0));\\n    emit ProxyOwnershipTransferred(proxyOwner(), newOwner);\\n    setUpgradeabilityOwner(newOwner);\\n  }\\n\\n  /**\\n   * @dev Allows the upgradeability owner to upgrade the current implementation of the proxy.\\n   * @param implementation representing the address of the new implementation to be set.\\n   */\\n  function upgradeTo(address implementation) public onlyProxyOwner {\\n    _upgradeTo(implementation);\\n  }\\n\\n  /**\\n   * @dev Allows the upgradeability owner to upgrade the current implementation of the proxy\\n   * and delegatecall the new implementation for initialization.\\n   * @param implementation representing the address of the new implementation to be set.\\n   * @param data represents the msg.data to bet sent in the low level call. This parameter may include the function\\n   * signature of the implementation to be called with the needed payload\\n   */\\n  function upgradeToAndCall(address implementation, bytes data) payable public onlyProxyOwner {\\n    upgradeTo(implementation);\\n    require(address(this).delegatecall(data));\\n  }\\n}\\n\\ncontract OwnableDelegateProxy is OwnedUpgradeabilityProxy {\\n\\n    constructor(address owner, address initialImplementation, bytes calldata)\\n        public\\n    {\\n        setUpgradeabilityOwner(owner);\\n        _upgradeTo(initialImplementation);\\n        require(initialImplementation.delegatecall(calldata));\\n    }\\n\\n}\",\"keccak256\":\"0x0024d6f18c483d749fa99b5776918d08c5c31ef590e8745d11124a29a785be58\"}},\"version\":1}",
  "bytecode": "0x6080604052621275006005556006805460ff1916905534801561002157600080fd5b5060008054600160a060020a0319163317905561003c61007e565b604051809103906000f080158015610058573d6000803e3d6000fd5b5060018054600160a060020a031916600160a060020a039290921691909117905561008e565b60405161083d80610ecc83390190565b610e2f8061009d6000396000f3006080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df5780631a86ac4f1461016957806338b6e4071461019257806353376d1f146101b55780635eebea20146101d657806369dc9ff314610209578063715018a61461022a5780638da5cb5b1461023f57806397204d8e14610270578063c455279114610285578063d4e8e063146102a6578063ddd81f82146102c7578063e71a02e1146102dc578063ef7f3834146102f1578063f2fde38b14610312575b600080fd5b3480156100eb57600080fd5b506100f4610333565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061017e61036a565b604080519115158252519081900360200190f35b34801561019e57600080fd5b506101b3600160a060020a0360043516610373565b005b3480156101c157600080fd5b506101b3600160a060020a036004351661042e565b3480156101e257600080fd5b506101f7600160a060020a0360043516610466565b60408051918252519081900360200190f35b34801561021557600080fd5b5061017e600160a060020a0360043516610478565b34801561023657600080fd5b506101b361048d565b34801561024b57600080fd5b506102546104f9565b60408051600160a060020a039092168252519081900360200190f35b34801561027c57600080fd5b50610254610508565b34801561029157600080fd5b50610254600160a060020a0360043516610517565b3480156102b257600080fd5b506101b3600160a060020a0360043516610532565b3480156102d357600080fd5b506102546105af565b3480156102e857600080fd5b506101f761074e565b3480156102fd57600080fd5b506101b3600160a060020a0360043516610754565b34801561031e57600080fd5b506101b3600160a060020a03600435166107b0565b60408051808201909152601d81527f50726f6a6563742057797665726e2050726f7879205265676973747279000000602082015281565b60065460ff1681565b600054600160a060020a0316331461038a57600080fd5b600160a060020a03811660009081526004602052604090205460ff161580156103ca5750600160a060020a03811660009081526003602052604090205415155b80156103f25750600554600160a060020a038216600090815260036020526040902054429101105b15156103fd57600080fd5b600160a060020a0316600090815260036020908152604080832083905560049091529020805460ff19166001179055565b600054600160a060020a0316331461044557600080fd5b600160a060020a03166000908152600460205260409020805460ff19169055565b60036020526000908152604090205481565b60046020526000908152604090205460ff1681565b600054600160a060020a031633146104a457600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600154600160a060020a031681565b600260205260009081526040902054600160a060020a031681565b600054600160a060020a0316331461054957600080fd5b600160a060020a03811660009081526004602052604090205460ff161580156105885750600160a060020a038116600090815260036020526040902054155b151561059357600080fd5b600160a060020a03166000908152600360205260409020429055565b33600090815260026020526040812054600160a060020a0316156105d257600080fd5b600154604080513360248201819052306044808401919091528351808403909101815260649092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f485cc955000000000000000000000000000000000000000000000000000000001790529091600160a060020a031690610659610844565b8084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106c35781810151838201526020016106ab565b50505050905090810190601f1680156106f05780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f080158015610713573d6000803e3d6000fd5b50336000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316179055919050565b60055481565b600054600160a060020a0316331461076b57600080fd5b60065460ff161561077b57600080fd5b6006805460ff199081166001908117909255600160a060020a0390921660009081526004602052604090208054909216179055565b600054600160a060020a031633146107c757600080fd5b600160a060020a03811615156107dc57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6040516105af80610855833901905600608060405234801561001057600080fd5b506040516105af3803806105af8339810160409081528151602083015191830151909201610046836401000000006100e0810204565b61005882640100000000610102810204565b81600160a060020a03168160405180828051906020019080838360005b8381101561008d578181015183820152602001610075565b50505050905090810190601f1680156100ba5780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015156100d857600080fd5b505050610165565b60018054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a038281169116141561011d57600080fd5b60008054600160a060020a031916600160a060020a038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b61043b806101746000396000f3006080604052600436106100825763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663025313a281146100c85780633659cfe6146100f95780634555d5c91461011c5780634f1ef286146101435780635c60da1b1461019d5780636fde8202146101b2578063f1739cae146101c7575b600061008c6101e8565b9050600160a060020a03811615156100a357600080fd5b60405136600082376000803683855af43d806000843e8180156100c4578184f35b8184fd5b3480156100d457600080fd5b506100dd6101f7565b60408051600160a060020a039092168252519081900360200190f35b34801561010557600080fd5b5061011a600160a060020a0360043516610206565b005b34801561012857600080fd5b5061013161022e565b60408051918252519081900360200190f35b60408051602060046024803582810135601f810185900485028601850190965285855261011a958335600160a060020a03169536956044949193909101919081908401838280828437509497506102339650505050505050565b3480156101a957600080fd5b506100dd6101e8565b3480156101be57600080fd5b506100dd6102dc565b3480156101d357600080fd5b5061011a600160a060020a03600435166102eb565b600054600160a060020a031690565b60006102016102dc565b905090565b61020e6101f7565b600160a060020a0316331461022257600080fd5b61022b81610370565b50565b600290565b61023b6101f7565b600160a060020a0316331461024f57600080fd5b61025882610206565b30600160a060020a03168160405180828051906020019080838360005b8381101561028d578181015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015156102d857600080fd5b5050565b600154600160a060020a031690565b6102f36101f7565b600160a060020a0316331461030757600080fd5b600160a060020a038116151561031c57600080fd5b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd96103456101f7565b60408051600160a060020a03928316815291841660208301528051918290030190a161022b816103e0565b600054600160a060020a038281169116141561038b57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820514d16a22f1da6cb827ffb9e9e965b42176576c0ade6d82b342a8cc9682133f00029a165627a7a72305820ed4741950b323d73e5598f39912c6133c248da1f5e73655192daf1bbc3c91781002960806040526001805460a060020a60ff021916905534801561002057600080fd5b5061080d806100306000396000f3006080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631b0f7ba981146100e65780633f801f91146101665780634555d5c9146101d4578063485cc955146101fb5780634c93505f146102225780634f8632ba1461023c5780635c60da1b1461026d57806363d256ce146102825780636fde8202146102975780637b103999146102ac5780638f4ffcb1146102c1575b60408051348152905133917fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1919081900360200190a2005b3480156100f257600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610152948235600160a060020a0316946024803560ff16953695946064949201919081908401838280828437509497506103319650505050505050565b604080519115158252519081900360200190f35b34801561017257600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101d2948235600160a060020a0316946024803560ff169536959460649492019190819084018382808284375094975061051f9650505050505050565b005b3480156101e057600080fd5b506101e961053a565b60408051918252519081900360200190f35b34801561020757600080fd5b506101d2600160a060020a036004358116906024351661053f565b34801561022e57600080fd5b506101d260043515156105b5565b34801561024857600080fd5b50610251610630565b60408051600160a060020a039092168252519081900360200190f35b34801561027957600080fd5b5061025161063f565b34801561028e57600080fd5b5061015261064e565b3480156102a357600080fd5b5061025161065e565b3480156102b857600080fd5b5061025161066d565b3480156102cd57600080fd5b50604080516020601f6064356004818101359283018490048402850184019095528184526101d294600160a060020a0381358116956024803596604435909316953695608494920191819084018382808284375094975061067c9650505050505050565b600254600090600160a060020a03163314806103f0575060035460a060020a900460ff161580156103f05750600354604080517f69dc9ff30000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a03909216916369dc9ff3916024808201926020929091908290030181600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d60208110156103ed57600080fd5b50515b15156103fb57600080fd5b600083600181111561040957fe5b141561048d5783600160a060020a03168260405180828051906020019080838360005b8381101561044457818101518382015260200161042c565b50505050905090810190601f1680156104715780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af19150509050610518565b600183600181111561049b57fe5b14156105185783600160a060020a03168260405180828051906020019080838360005b838110156104d65781810151838201526020016104be565b50505050905090810190601f1680156105035780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af4925050505b9392505050565b61052a838383610331565b151561053557600080fd5b505050565b600290565b60015460a060020a900460ff161561055657600080fd5b6001805474ff0000000000000000000000000000000000000000191660a060020a17905560028054600160a060020a0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560038054929093169116179055565b600254600160a060020a031633146105cc57600080fd5b6003805482151560a060020a810274ff0000000000000000000000000000000000000000199092169190911790915560408051918252517f2165014523a6f4135deffed62d70149aad59b64de5aac51e3abbcbe2a83e2f7e9181900360200190a150565b600254600160a060020a031681565b600054600160a060020a031690565b60035460a060020a900460ff1681565b600154600160a060020a031690565b600354600160a060020a031681565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015230602483015260448201869052915184928316916323b872dd9160648083019260209291908290030181600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050506040513d602081101561071857600080fd5b5051151561072557600080fd5b82600160a060020a031685600160a060020a03167fd65b48fd35864b3528d38e44760be5553248f89bf3ff6b06cca57817cc2650bf86856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561079f578181015183820152602001610787565b50505050905090810190601f1680156107cc5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350505050505600a165627a7a7230582089151ca5c5f5b219d787d51f605d2505f57004f9700c0efdf510d3effeff87b30029",
  "deployedBytecode": "0x6080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df5780631a86ac4f1461016957806338b6e4071461019257806353376d1f146101b55780635eebea20146101d657806369dc9ff314610209578063715018a61461022a5780638da5cb5b1461023f57806397204d8e14610270578063c455279114610285578063d4e8e063146102a6578063ddd81f82146102c7578063e71a02e1146102dc578063ef7f3834146102f1578063f2fde38b14610312575b600080fd5b3480156100eb57600080fd5b506100f4610333565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b5061017e61036a565b604080519115158252519081900360200190f35b34801561019e57600080fd5b506101b3600160a060020a0360043516610373565b005b3480156101c157600080fd5b506101b3600160a060020a036004351661042e565b3480156101e257600080fd5b506101f7600160a060020a0360043516610466565b60408051918252519081900360200190f35b34801561021557600080fd5b5061017e600160a060020a0360043516610478565b34801561023657600080fd5b506101b361048d565b34801561024b57600080fd5b506102546104f9565b60408051600160a060020a039092168252519081900360200190f35b34801561027c57600080fd5b50610254610508565b34801561029157600080fd5b50610254600160a060020a0360043516610517565b3480156102b257600080fd5b506101b3600160a060020a0360043516610532565b3480156102d357600080fd5b506102546105af565b3480156102e857600080fd5b506101f761074e565b3480156102fd57600080fd5b506101b3600160a060020a0360043516610754565b34801561031e57600080fd5b506101b3600160a060020a03600435166107b0565b60408051808201909152601d81527f50726f6a6563742057797665726e2050726f7879205265676973747279000000602082015281565b60065460ff1681565b600054600160a060020a0316331461038a57600080fd5b600160a060020a03811660009081526004602052604090205460ff161580156103ca5750600160a060020a03811660009081526003602052604090205415155b80156103f25750600554600160a060020a038216600090815260036020526040902054429101105b15156103fd57600080fd5b600160a060020a0316600090815260036020908152604080832083905560049091529020805460ff19166001179055565b600054600160a060020a0316331461044557600080fd5b600160a060020a03166000908152600460205260409020805460ff19169055565b60036020526000908152604090205481565b60046020526000908152604090205460ff1681565b600054600160a060020a031633146104a457600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600154600160a060020a031681565b600260205260009081526040902054600160a060020a031681565b600054600160a060020a0316331461054957600080fd5b600160a060020a03811660009081526004602052604090205460ff161580156105885750600160a060020a038116600090815260036020526040902054155b151561059357600080fd5b600160a060020a03166000908152600360205260409020429055565b33600090815260026020526040812054600160a060020a0316156105d257600080fd5b600154604080513360248201819052306044808401919091528351808403909101815260649092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f485cc955000000000000000000000000000000000000000000000000000000001790529091600160a060020a031690610659610844565b8084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106c35781810151838201526020016106ab565b50505050905090810190601f1680156106f05780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f080158015610713573d6000803e3d6000fd5b50336000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316179055919050565b60055481565b600054600160a060020a0316331461076b57600080fd5b60065460ff161561077b57600080fd5b6006805460ff199081166001908117909255600160a060020a0390921660009081526004602052604090208054909216179055565b600054600160a060020a031633146107c757600080fd5b600160a060020a03811615156107dc57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6040516105af80610855833901905600608060405234801561001057600080fd5b506040516105af3803806105af8339810160409081528151602083015191830151909201610046836401000000006100e0810204565b61005882640100000000610102810204565b81600160a060020a03168160405180828051906020019080838360005b8381101561008d578181015183820152602001610075565b50505050905090810190601f1680156100ba5780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015156100d857600080fd5b505050610165565b60018054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a038281169116141561011d57600080fd5b60008054600160a060020a031916600160a060020a038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b61043b806101746000396000f3006080604052600436106100825763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663025313a281146100c85780633659cfe6146100f95780634555d5c91461011c5780634f1ef286146101435780635c60da1b1461019d5780636fde8202146101b2578063f1739cae146101c7575b600061008c6101e8565b9050600160a060020a03811615156100a357600080fd5b60405136600082376000803683855af43d806000843e8180156100c4578184f35b8184fd5b3480156100d457600080fd5b506100dd6101f7565b60408051600160a060020a039092168252519081900360200190f35b34801561010557600080fd5b5061011a600160a060020a0360043516610206565b005b34801561012857600080fd5b5061013161022e565b60408051918252519081900360200190f35b60408051602060046024803582810135601f810185900485028601850190965285855261011a958335600160a060020a03169536956044949193909101919081908401838280828437509497506102339650505050505050565b3480156101a957600080fd5b506100dd6101e8565b3480156101be57600080fd5b506100dd6102dc565b3480156101d357600080fd5b5061011a600160a060020a03600435166102eb565b600054600160a060020a031690565b60006102016102dc565b905090565b61020e6101f7565b600160a060020a0316331461022257600080fd5b61022b81610370565b50565b600290565b61023b6101f7565b600160a060020a0316331461024f57600080fd5b61025882610206565b30600160a060020a03168160405180828051906020019080838360005b8381101561028d578181015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015156102d857600080fd5b5050565b600154600160a060020a031690565b6102f36101f7565b600160a060020a0316331461030757600080fd5b600160a060020a038116151561031c57600080fd5b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd96103456101f7565b60408051600160a060020a03928316815291841660208301528051918290030190a161022b816103e0565b600054600160a060020a038281169116141561038b57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820514d16a22f1da6cb827ffb9e9e965b42176576c0ade6d82b342a8cc9682133f00029a165627a7a72305820ed4741950b323d73e5598f39912c6133c248da1f5e73655192daf1bbc3c917810029",
  "devdoc": {
    "methods": {
      "endGrantAuthentication(address)": {
        "details": "ProxyRegistry owner only",
        "params": {
          "addr": "Address to which to grant permissions"
        }
      },
      "grantInitialAuthentication(address)": {
        "details": "No delay, can only be called once - after that the standard registry process with a delay must be used",
        "params": {
          "authAddress": "Address of the contract to grant authentication"
        }
      },
      "registerProxy()": {
        "details": "Must be called by the user which the proxy is for, creates a new AuthenticatedProxy",
        "return": "New AuthenticatedProxy contract"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "revokeAuthentication(address)": {
        "details": "ProxyRegistry owner only",
        "params": {
          "addr": "Address of which to revoke permissions"
        }
      },
      "startGrantAuthentication(address)": {
        "details": "ProxyRegistry owner only",
        "params": {
          "addr": "Address to which to grant permissions"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "endGrantAuthentication(address)": {
        "notice": "End the process to nable access for specified contract after delay period has passed."
      },
      "grantInitialAuthentication(address)": {
        "notice": "Grant authentication to the initial Exchange protocol contract"
      },
      "registerProxy()": {
        "notice": "Register a proxy contract with this registry"
      },
      "revokeAuthentication(address)": {
        "notice": "Revoke access for specified contract. Can be done instantly."
      },
      "startGrantAuthentication(address)": {
        "notice": "Start the process to enable access for specified contract. Subject to delay period."
      }
    }
  }
}